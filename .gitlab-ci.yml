stages:
  - build
  - test
  - publish
  - release

variables:
  APP_NAME: cellar-api
  APP_VERSION: 1.0.1
  IMAGE_NAME: ${CI_REGISTRY_IMAGE}
  PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

.api:
  image: golang:1.15-buster
  cache:
    key:
      files:
        - cellar/go.mod
        - cellar/go.sum
      prefix: ${CI_PIPELINE_IID}
    paths:
      - /go
  tags:
    - gitlab-org-docker

.docker:
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add --no-cache make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - make docker-build IMAGE_NAME=${IMAGE_NAME} IMAGE_TAG=${APP_VERSION}
  after_script:
    - docker logout $CI_REGISTRY

build-binary:
  extends: .api
  stage: build
  script:
    - make build

build-docker:
  extends: .docker
  stage: build
  script:
    - make docker-build APP_VERSION=${APP_VERSION} IMAGE_NAME=${IMAGE_NAME} IMAGE_TAG=${APP_VERSION}

test-unit:
  extends: .api
  stage: test
  script:
    - make test-unit

test-integration:
  extends: .api
  stage: test
  variables:
    REDIS_HOST: "redis"
    REDIS_PORT: 6379
  services:
    - redis:6.0-alpine
  script:
    - make test-integration

publish-reference:
  extends: .api
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  script:
    - make redoc
      APP_VERSION=${APP_VERSION}
      REDOC_FILE=public/index.html
  artifacts:
    paths:
      - public

publish-binary:
  extends: .api
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  script:
    - make publish
      APP_VERSION=${APP_VERSION}
      PACKAGE_ARCH=linux-amd64
      PACKAGE_NAME=${APP_NAME}
      PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL}
      PACKAGE_TOKEN=${CI_JOB_TOKEN}
  artifacts:
    name: cellar-api-${APP_VERSION}
    paths:
      - cellar-api

publish-docker:
  extends: .docker
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  script:
    - make docker-publish APP_VERSION=${APP_VERSION} IMAGE_NAME=${IMAGE_NAME} IMAGE_TAG=${APP_VERSION}
    - make docker-publish APP_VERSION=${APP_VERSION} IMAGE_NAME=${IMAGE_NAME} IMAGE_TAG=latest

release:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - job: publish-binary
      artifacts: true
    - job: publish-reference
      artifacts: true
    - job: publish-docker
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - apk add --no-cache make
  script:
    - make release
      APP_VERSION=${APP_VERSION}
      IMAGE_NAME=${IMAGE_NAME}
      IMAGE_TAG=${APP_VERSION}
      PACKAGE_ARCH=linux-amd64
      PACKAGE_NAME=${APP_NAME}
      PACKAGE_REGISTRY_URL=${PACKAGE_REGISTRY_URL}
