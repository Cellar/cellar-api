{
    "swagger": "2.0",
    "info": {
        "description": "Simple secret sharing with the infrastructure you already trust",
        "title": "Cellar",
        "contact": {
            "name": "Aria Vesta",
            "url": "http://cellar-app.io",
            "email": "dev@ariavesta.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://gitlab.com/cellar-app/cellar-api/-/blob/main/LICENSE.txt"
        }
    },
    "basePath": "/v2",
    "paths": {
        "/v2/secrets": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret content",
                        "name": "content",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Access limit",
                        "name": "access_limit",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Expiration of the secret in Unix Epoch Time",
                        "name": "expiration_epoch",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Secret content as a file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SecretMetadataResponseV2"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v2/secrets/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Secret Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretMetadataResponseV2"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/v2/secrets/{id}/access": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "summary": "Access Secret Content. If the content is a file it the response will be an application/octet-stream",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecretContentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "models.SecretContentResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "my very secret text"
                },
                "id": {
                    "type": "string",
                    "example": "22b6fff1be15d1fd54b7b8ec6ad22e80e66275195c914c4b0f9652248a498680"
                }
            }
        },
        "models.SecretMetadataResponseV2": {
            "type": "object",
            "properties": {
                "access_count": {
                    "type": "integer",
                    "example": 1
                },
                "access_limit": {
                    "type": "integer",
                    "example": 10
                },
                "content_type": {
                    "type": "string",
                    "example": "text"
                },
                "expiration": {
                    "type": "string",
                    "example": "1970-01-01 00:00:00 UTC"
                },
                "id": {
                    "type": "string",
                    "example": "22b6fff1be15d1fd54b7b8ec6ad22e80e66275195c914c4b0f9652248a498680"
                }
            }
        }
    }
}